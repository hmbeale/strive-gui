{"version":3,"sources":["components/myCardContent.js","components/containedButtons.js","components/myCardActions.js","components/gui.js","components/objects.js","components/logic.js","components/mainLogic.js","App.js","serviceWorker.js","index.js"],"names":["MyCardContent","classes","this","props","react_default","a","createElement","CardContent_default","className","cardcontent","Typography_default","component","text","blockThreeText","blockTwoText","blockOneText","React","Component","withStyles","theme","media","height","position","ContainedButtons","handleButtonOneClick","_this","handleButtonTwoClick","handleButtonThreeClick","handleButtonFourClick","Button_default","variant","color","button","onClick","width","margin","spacing","unit","input","display","MyCardActions","CardActions_default","cardactions","containedButtons","GUI","blockFourText","blockFiveText","Card_default","card","myCardContent","myCardActions","layout","Object","defineProperty","marginLeft","marginRight","breakpoints","up","marginTop","maxWidth","down","player","attack","attackPenalty","defenseValue","health","maxHealth","combatStartHealth","combatHealValue","inCombat","disposition","distanceTraveled","isAlive","reachedDestination","playerDispositions","creature","type","adjective","creatureSizes","creatureTypes","scenery","sceneryAdjectives","sceneryTypes","getRandom","min","max","Math","ceil","floor","random","moveForward","createCreature","randHealth","randAttack","standardCombatRound","playerAttack","creatureAttack","outputText","resolveCombatDamage","slaycreature","playerCombatDeath","postCombatHeal","concat","playerHeal","healAmount","playerMoveForward","randNum","length","playerDefend","playerFlee","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","state","gui","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d01b2e79.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = theme => ({\r\n  media: {\r\n  height: 300,\r\n  },\r\n  cardcontent: {\r\n    height: 480,\r\n    position:'relative',\r\n  },\r\n  text: {\r\n    height: 140,\r\n  }\r\n\r\n});\r\nclass MyCardContent extends React.Component {\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <CardContent className = {classes.cardcontent}>\r\n\r\n        <Typography component=\"p\" className={classes.text}>\r\n          {this.props.blockThreeText}\r\n        </Typography>\r\n\r\n        <Typography component=\"p\" className={classes.text}>\r\n          {this.props.blockTwoText}\r\n        </Typography>\r\n\r\n        <Typography component=\"p\" className={classes.text}>\r\n          {this.props.blockOneText}\r\n        </Typography>\r\n\r\n      </CardContent>\r\n    );\r\n  }\r\n}\r\n\r\nMyCardContent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MyCardContent);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    width: 165,\r\n    margin: theme.spacing.unit\r\n  },\r\n  input: {\r\n    display: \"none\"\r\n  }\r\n});\r\n\r\nclass ContainedButtons extends React.Component {\r\n\r\n  handleButtonOneClick = () => {\r\n    this.props.handleButtonOneClick();\r\n  }\r\n\r\n  handleButtonTwoClick = () => {\r\n    this.props.handleButtonTwoClick();\r\n  }\r\n\r\n  handleButtonThreeClick = () => {\r\n    this.props.handleButtonThreeClick();\r\n  }\r\n\r\n  handleButtonFourClick = () => {\r\n    this.props.handleButtonFourClick();\r\n  }\r\n\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          className={classes.button}\r\n          onClick={this.handleButtonOneClick}\r\n        >\r\n          Travel Forward\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick = {this.handleButtonTwoClick}\r\n        >\r\n          Attack\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick = {this.handleButtonThreeClick}\r\n        >\r\n          Defend\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          className={classes.button}\r\n          onClick = {this.handleButtonFourClick}\r\n        >\r\n          Flee\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContainedButtons.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(ContainedButtons);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ContainedButtons from './containedButtons.js';\r\nimport CardActions from '@material-ui/core/CardActions';\r\n\r\nconst styles = theme => ({\r\n  media: {\r\n  height: 300,\r\n},\r\n   cardactions: {\r\n     height: 110,\r\n   }\r\n});\r\n\r\nclass MyCardActions extends React.Component {\r\n\r\n  handleButtonOneClick = () => {\r\n    this.props.handleButtonOneClick();\r\n  }\r\n\r\n  handleButtonTwoClick = () => {\r\n    this.props.handleButtonTwoClick();\r\n  }\r\n\r\n  handleButtonThreeClick = () => {\r\n    this.props.handleButtonThreeClick();\r\n  }\r\n\r\n  handleButtonFourClick = () => {\r\n    this.props.handleButtonFourClick();\r\n  }\r\n\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <CardActions className = {classes.cardactions}>\r\n        <ContainedButtons\r\n          handleButtonOneClick = {this.handleButtonOneClick}\r\n          handleButtonTwoClick = {this.handleButtonTwoClick}\r\n          handleButtonThreeClick = {this.handleButtonThreeClick}\r\n          handleButtonFourClick = {this.handleButtonFourClick}\r\n          />\r\n      </CardActions>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(MyCardActions);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport MyCardContent from './myCardContent.js';\r\nimport MyCardActions from './myCardActions.js';\r\n\r\nconst styles = theme => ({\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 1100,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\"\r\n    }\r\n  },\r\n  card: {\r\n    marginTop: theme.spacing.unit * 4,\r\n    maxWidth: 375,\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    height: 635,\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginTop:0,\r\n    }\r\n  }\r\n});\r\n\r\nclass GUI extends React.Component {\r\n\r\n  handleButtonOneClick = () => {\r\n    this.props.handleButtonOneClick();\r\n  }\r\n\r\n  handleButtonTwoClick = () => {\r\n    this.props.handleButtonTwoClick();\r\n  }\r\n\r\n  handleButtonThreeClick = () => {\r\n    this.props.handleButtonThreeClick();\r\n  }\r\n\r\n  handleButtonFourClick = () => {\r\n    this.props.handleButtonFourClick();\r\n  }\r\n\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const blockOneText = this.props.blockOneText;\r\n    const blockTwoText = this.props.blockTwoText;\r\n    const blockThreeText = this.props.blockThreeText;\r\n    const blockFourText = this.props.blockFourText;\r\n    const blockFiveText = this.props.blockFiveText;\r\n\r\n    return (\r\n      <Card className={classes.card}>\r\n        <MyCardContent\r\n          blockOneText = {blockOneText}\r\n          blockTwoText = {blockTwoText}\r\n          blockThreeText = {blockThreeText}\r\n          blockFourText = {blockFourText}\r\n          blockFiveText = {blockFiveText}\r\n          />\r\n        <MyCardActions\r\n          handleButtonOneClick = {this.handleButtonOneClick}\r\n          handleButtonTwoClick = {this.handleButtonTwoClick}\r\n          handleButtonThreeClick = {this.handleButtonThreeClick}\r\n          handleButtonFourClick = {this.handleButtonFourClick}\r\n          />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nGUI.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(GUI);\r\n","\r\nconst player = {\r\n  attack : 3,\r\n  attackPenalty : 2,\r\n  defenseValue : 1,\r\n\r\n  health : 15,\r\n  maxHealth : 15,\r\n  combatStartHealth : 15,\r\n  combatHealValue : 2,\r\n\r\n  inCombat : false,\r\n  disposition : '',\r\n  distanceTraveled : 0,\r\n\r\n  isAlive : true,\r\n  reachedDestination : false\r\n};\r\n\r\nconst playerDispositions = [\r\n  'You hear some birds chirping',\r\n  'Your feet ache',\r\n  'You feel a pleasant breeze',\r\n  'Sweat trickles from your brow'\r\n];\r\n\r\nconst creature = {\r\n  type : '',\r\n  adjective : '',\r\n  health : 0,\r\n  attack : 0\r\n}\r\n\r\nconst creatureSizes = ['delicate', 'medium sized', 'large', 'hulking'];\r\nconst creatureTypes = [\r\n  'beast with dulled fangs',\r\n  'creature with sharp claws',\r\n  'beast with many fearsome horns',\r\n  'creature with flames dripping from its jaws'\r\n];\r\n\r\nconst scenery = {\r\n  adjective : '',\r\n  type : ''\r\n}\r\n\r\n\r\nconst sceneryAdjectives = ['small', 'big', 'dark', 'sunlit'];\r\nconst sceneryTypes = ['river', 'pool of water', 'tree', 'cluster of bushes',\r\n                      'tower', 'town in the distance', 'flock of birds', 'cloud'];\r\n\r\nconst distNeeded = 30;\r\n\r\nexport {player, playerDispositions, creature, creatureSizes, creatureTypes, scenery,\r\n        sceneryAdjectives, sceneryTypes, distNeeded}\r\n","import {player, playerDispositions, creature, creatureSizes, creatureTypes, scenery,\r\n        sceneryAdjectives, sceneryTypes} from './objects.js'\r\n\r\nconst getRandom = (min, max) => {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive\r\n};\r\n\r\nconst moveForward = () => {\r\n  player.distanceTraveled++;\r\n  return 'You move forward. ';\r\n};\r\n\r\nconst updateScenery = () => {\r\n  scenery.type = sceneryTypes[getRandom(0, sceneryTypes.length - 1)];\r\n  scenery.adjective =\r\n    sceneryAdjectives[getRandom(0, sceneryAdjectives.length - 1)];\r\n};\r\n\r\nconst describeScenery = () => {\r\n  return `You see a ${scenery.adjective} ${scenery.type}. `\r\n}\r\n\r\nconst updatePlayerDisposition = () => {\r\n  player.disposition =\r\n    playerDispositions[getRandom(0, playerDispositions.length - 1)];\r\n};\r\n\r\nconst startCombat = () => {\r\n  createCreature();\r\n  player.combatStartHealth = player.health;\r\n  player.inCombat = true;\r\n};\r\n\r\nconst createCreature = () => {\r\n  let randHealth = getRandom(1, 4);\r\n  let randAttack = getRandom(1, 4);\r\n  //lowest health should take about two attacks (3-7 hp)\r\n  //highest health should take about five attacks (15-19 hp)\r\n  creature.health = getRandom(randHealth * 4 - 1, randHealth * 4 + 3);\r\n  creature.adjective = creatureSizes[randHealth - 1];\r\n\r\n  creature.attack = randAttack;\r\n  creature.type = creatureTypes[randAttack - 1];\r\n};\r\n\r\nconst standardCombatRound = (playerAttack, creatureAttack) => {\r\n  let outputText = '';\r\n  outputText+= resolveCombatDamage(playerAttack, creatureAttack);\r\n  if (creature.health <= 0) {\r\n    outputText+= slaycreature();\r\n  }\r\n  if (player.health <= 0) {\r\n    outputText+= playerCombatDeath();\r\n  }\r\n  if (!player.inCombat) {\r\n    outputText+= postCombatHeal();\r\n  }\r\n\r\n  return outputText;\r\n};\r\n\r\nconst resolveCombatDamage = (playerAttack, creatureAttack) => {\r\n  creature.health = creature.health - playerAttack;\r\n  //makes sure player isn't healed by negative damage\r\n  if (creatureAttack > 0) {\r\n    player.health = player.health - creatureAttack;\r\n  }\r\n  return (`The ${creature.type} attacks. Your health is ${player.health}/${player.maxHealth}. `)\r\n};\r\n\r\nconst slaycreature = () => {\r\n  player.inCombat = false;\r\n  creature.attack = 0;\r\n  return `You slay the ${creature.type}. `;\r\n};\r\n\r\nconst playerCombatDeath = () => {\r\n    player.isAlive = false;\r\n    return `The ${creature.type} slew you. `;\r\n}\r\n\r\n\r\nconst postCombatHeal = () => {\r\n  let outputText = '';\r\n  if (player.health < player.combatStartHealth) {\r\n    outputText += 'You bind your wounds as best you can. ';\r\n    playerHeal(player.combatHealValue);\r\n    //fighting shouldn't make you healthier than when you started\r\n    if (player.health > player.combatStartHealth) {\r\n      player.health = player.combatStartHealth;\r\n    }\r\n    outputText+=`Your health is ${player.health}/${player.maxHealth}. `\r\n  }\r\n  return outputText;\r\n};\r\n\r\nconst playerHeal = (healAmount) => {\r\n  player.health = player.health + healAmount;\r\n  if (player.health > player.maxHealth) {\r\n    player.health = player.maxHealth;\r\n  }\r\n};\r\n\r\nexport  {getRandom, moveForward, updateScenery, updatePlayerDisposition,\r\n         startCombat, createCreature, standardCombatRound, resolveCombatDamage,\r\n         slaycreature, postCombatHeal, playerHeal,\r\n       describeScenery};\r\n","import {getRandom, moveForward, updateScenery, updatePlayerDisposition,\r\n         startCombat, standardCombatRound, postCombatHeal, playerHeal,\r\n         describeScenery} from './logic.js'\r\n//I feel like importing these things here and to logic.js might be a bad idea but idk\r\nimport {player, creature, distNeeded} from './objects.js'\r\n\r\n\r\n//handles player input\r\n//player can move forward, attack, defend, and flee\r\n\r\n//each move forward procedurally generates a new scenario\r\n//based on a 'roll' from 1 to 40\r\nconst playerMoveForward = () => {\r\n  if (player.reachedDestination){\r\n    return 'You\\'ve already reached your destination. Refresh the page if ' +\r\n           'you want another journey. ';\r\n  }\r\n  if (!player.isAlive){\r\n    return 'Unfortunately, you are dead and cannot take any action. ' +\r\n                 'Try refreshing the page for another chance at life. ';\r\n  }\r\n  if (player.inCombat){\r\n    return 'You are in combat and cannot progress. ';\r\n  }\r\n\r\n  let outputText = '';\r\n  if (!player.inCombat){\r\n\r\n    if (player.distanceTraveled >= distNeeded) {\r\n      player.reachedDestination = true;\r\n      return 'You made it to your destination, congratulations. ' +\r\n            'Refresh the page if you want another journey. ';\r\n    }\r\n\r\n    let randNum = getRandom(1, 40);\r\n\r\n    if (randNum <= 6) {\r\n      outputText+= moveForward();\r\n      startCombat();\r\n      outputText+= `You encounter a \\n${creature.adjective} ${creature.type}. `\r\n    }\r\n\r\n    if (randNum >= 7 && randNum <= 29) {\r\n      outputText+= moveForward();\r\n    }\r\n\r\n    if (randNum >= 30 && randNum <= 36) {\r\n      outputText+= moveForward();\r\n      updateScenery();\r\n      outputText+= describeScenery();\r\n    }\r\n\r\n    if (randNum >= 37 && randNum <= 38) {\r\n      outputText+= moveForward();\r\n      updatePlayerDisposition();\r\n      outputText+= player.disposition + '. ';\r\n    }\r\n\r\n    if (randNum === 39) {\r\n      outputText+= moveForward();\r\n      outputText+= 'You find some medical supplies. ';\r\n      playerHeal(5);\r\n      outputText+= `Your health is ${player.health}/${player.maxHealth}. `\r\n    }\r\n\r\n    if (randNum === 40) {\r\n      outputText+= moveForward();\r\n      outputText+= 'You find a better weapon. ';\r\n      player.attack++;\r\n    }\r\n  }\r\n\r\n  return outputText;\r\n}\r\n\r\n//player can only attack if in combat and not in an endgame state\r\nconst playerAttack = () => {\r\n  if (player.reachedDestination){\r\n    return 'You already made it to your destination and have no more need of violence. ';\r\n  }\r\n  if (!player.isAlive){\r\n    return 'Unfortunately, you are dead and cannot take any action. ' +\r\n                 'Try refreshing the page for another chance at life. ';\r\n  }\r\n\r\n  let outputText = '';\r\n  if (!player.inCombat){\r\n    outputText+= 'You are not in combat. ';\r\n  }\r\n\r\n  if (player.inCombat){\r\n    outputText+= 'You attack. '\r\n    outputText+= standardCombatRound(player.attack, creature.attack);\r\n  }\r\n\r\n  return outputText;\r\n}\r\n\r\n//player can only defend if in combat and not in an endgame state\r\n//weaker than attacking but player gets defensive bonus\r\nconst playerDefend = () => {\r\n  if (player.reachedDestination){\r\n    return 'You already made it to your destination and have no more need of violence. ';\r\n  }\r\n  if (!player.isAlive){\r\n    return 'Unfortunately, you are dead and cannot take any action. ' +\r\n                 'Try refreshing the page for another chance at life. ';\r\n  }\r\n  let outputText = '';\r\n  if (!player.inCombat){\r\n    outputText+= 'You are not in combat. ';\r\n  }\r\n  if (player.inCombat){\r\n    outputText+= 'You defend. ';\r\n    outputText+= standardCombatRound(\r\n      player.attack - player.attackPenalty,\r\n      creature.attack - player.defenseValue\r\n    );\r\n  }\r\n  return outputText;\r\n}\r\n\r\n//player can only flee if in combat and not in an endgame state\r\n//25% chance to get away with a distance attackPenalty\r\n//75% chance to be caught and mauled badly\r\nconst playerFlee = () => {\r\n  if (player.reachedDestination){\r\n    return 'What are you trying to run away from, exactly? ';\r\n  }\r\n  if (!player.isAlive){\r\n    return 'Unfortunately, you are dead and cannot take any action. ' +\r\n                 'Try refreshing the page for another chance at life. ';\r\n  }\r\n  let outputText = '';\r\n    if (!player.inCombat){\r\n      outputText+= 'You are not in combat. ';\r\n    }\r\n    if (player.inCombat) {\r\n      outputText+= 'You flee. '\r\n      let randNum = getRandom(1, 4);\r\n\r\n      //flee fails\r\n      if (randNum === 1) {\r\n        outputText+= `The ${creature.type} catches you. `\r\n        outputText+= standardCombatRound(0, player.maxHealth - 1);\r\n      }\r\n\r\n      //flee succeeds\r\n      if (randNum >= 2) {\r\n        player.inCombat = false;\r\n        outputText+= 'You escape successfully but your ' +\r\n            'flight takes you further away from your goal. '\r\n        outputText+= postCombatHeal();\r\n        player.distanceTraveled = player.distanceTraveled - 5;\r\n      }\r\n    }\r\n  return outputText;\r\n}\r\n export {playerMoveForward, playerAttack, playerDefend, playerFlee}\r\n","import React from \"react\";\r\nimport GUI from \"./components/gui.js\";\r\nimport { playerMoveForward, playerAttack, playerDefend,\r\n         playerFlee } from './components/mainLogic.js'\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      blockOneText: 'Take care. ',\r\n      blockTwoText: 'You are journeying across a landscape of some peril. ',\r\n      blockThreeText: 'Welcome to Strive. ',\r\n    };\r\n  }\r\n\r\n  handleButtonOneClick = () => {\r\n    this.setState(\r\n      {\r\n      blockFiveText: this.state.blockFourText,\r\n      blockFourText: this.state.blockThreeText,\r\n      blockThreeText: this.state.blockTwoText,\r\n      blockTwoText: this.state.blockOneText,\r\n      blockOneText: playerMoveForward(),\r\n     });\r\n  }\r\n\r\n  handleButtonTwoClick = () => {\r\n    //playerAttack returns text based on game logic\r\n    this.setState(\r\n      {\r\n        blockFiveText: this.state.blockFourText,\r\n        blockFourText: this.state.blockThreeText,\r\n        blockThreeText: this.state.blockTwoText,\r\n        blockTwoText: this.state.blockOneText,\r\n        blockOneText: playerAttack(),\r\n     });\r\n  }\r\n\r\n  handleButtonThreeClick = () => {\r\n    //playerDefend returns text based on game logic\r\n    this.setState(\r\n      {\r\n        blockFiveText: this.state.blockFourText,\r\n        blockFourText: this.state.blockThreeText,\r\n        blockThreeText: this.state.blockTwoText,\r\n        blockTwoText: this.state.blockOneText,\r\n        blockOneText: playerDefend(),\r\n     });\r\n  }\r\n\r\n  handleButtonFourClick = () => {\r\n    //playerFlee returns text based on game logic\r\n    this.setState(\r\n      {\r\n        blockFiveText: this.state.blockFourText,\r\n        blockFourText: this.state.blockThreeText,\r\n        blockThreeText: this.state.blockTwoText,\r\n        blockTwoText: this.state.blockOneText,\r\n        blockOneText: playerFlee(),\r\n     });\r\n  }\r\n\r\n  render() {\r\n    const blockOneText = this.state.blockOneText;\r\n    const blockTwoText = this.state.blockTwoText;\r\n    const blockThreeText = this.state.blockThreeText;\r\n    const blockFourText = this.state.blockFourText;\r\n    const blockFiveText = this.state.blockFiveText;\r\n\r\n    return (\r\n      <GUI\r\n        blockOneText = {blockOneText}\r\n        blockTwoText = {blockTwoText}\r\n        blockThreeText = {blockThreeText}\r\n        blockFourText = {blockFourText}\r\n        blockFiveText = {blockFiveText}\r\n        handleButtonOneClick={this.handleButtonOneClick}\r\n        handleButtonTwoClick = {this.handleButtonTwoClick}\r\n        handleButtonThreeClick = {this.handleButtonThreeClick}\r\n        handleButtonFourClick = {this.handleButtonFourClick}\r\n        />\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}